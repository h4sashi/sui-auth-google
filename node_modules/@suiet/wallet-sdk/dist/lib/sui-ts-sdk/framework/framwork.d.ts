import { CoinStruct } from "@mysten/sui/client";
import { SuiMoveObject, SuiObjectInfo, SuiObjectResponse } from "../types";
import { bcs } from "@mysten/sui/bcs";
type StructTag = typeof bcs.StructTag.$inferType;
export type ObjectData = ObjectDataFull | SuiObjectInfo;
export type ObjectDataFull = SuiObjectResponse | SuiMoveObject;
export declare const COIN_TYPE_ARG_REGEX: RegExp;
export declare function isObjectDataFull(resp: ObjectData | ObjectDataFull): resp is SuiObjectResponse;
/**
 * Utility class for 0x2::coin
 * as defined in https://github.com/MystenLabs/sui/blob/ca9046fd8b1a9e8634a4b74b0e7dabdc7ea54475/sui_programmability/framework/sources/CoinUtil.move#L4
 */
export declare class CoinUtil {
    static isCoin(data: ObjectData): boolean;
    static getCoinType(type: string): string | null;
    static getCoinTypeArg(obj: ObjectData): string | null;
    static isSUI(obj: ObjectData): boolean;
    static getCoinSymbol(coinTypeArg: string): string;
    static getCoinStructTag(coinTypeArg: string): StructTag;
    static getID(obj: ObjectData): string;
    static totalBalance(coins: CoinStruct[]): bigint;
    /**
     * Sort coin by balance in an ascending order
     */
    static sortByBalance(coins: CoinStruct[]): CoinStruct[];
    static getBalanceFromCoinStruct(coin: CoinStruct): bigint;
    static getBalance(data: ObjectDataFull): bigint | undefined;
    private static getType;
}
export {};
