"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  SuiWalletAdapter: () => SuiWalletAdapter
});
module.exports = __toCommonJS(src_exports);

// src/adapter.ts
var SuiWalletAdapter = class {
  constructor() {
    this.name = "Sui Wallet (legacy)";
    this.connected = false;
    this.connecting = false;
  }
  getAccounts() {
    return window.suiWallet.getAccounts();
  }
  signAndExecuteTransaction(transaction) {
    return window.suiWallet.signAndExecuteTransaction(transaction);
  }
  async connect() {
    this.connecting = true;
    if (window.suiWallet) {
      const wallet = window.suiWallet;
      try {
        let given = await wallet.requestPermissions();
        const newLocal = ["viewAccount"];
        let perms = await wallet.hasPermissions(newLocal);
        console.log(perms);
        console.log(given);
        this.connected = true;
      } catch (err) {
        console.error(err);
      } finally {
        this.connecting = false;
      }
    }
  }
  async disconnect() {
    if (this.connected == true) {
      this.connected = false;
    }
    console.log("disconnected");
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SuiWalletAdapter
});
//# sourceMappingURL=index.js.map