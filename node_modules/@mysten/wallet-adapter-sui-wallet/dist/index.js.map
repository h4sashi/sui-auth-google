{"version":3,"sources":["../src/index.ts","../src/adapter.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nexport * from './adapter';","// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  SignableTransaction,\n  SuiAddress,\n  SuiTransactionResponse,\n} from \"@mysten/sui.js\";\nimport { WalletAdapter } from \"@mysten/wallet-adapter-base\";\n\nconst ALL_PERMISSION_TYPES = [\"viewAccount\", \"suggestTransactions\"] as const;\ntype AllPermissionsType = typeof ALL_PERMISSION_TYPES;\ntype PermissionType = AllPermissionsType[number];\n\ninterface SuiWallet {\n  hasPermissions(permissions: readonly PermissionType[]): Promise<boolean>;\n  requestPermissions(): Promise<boolean>;\n  getAccounts(): Promise<SuiAddress[]>;\n  signAndExecuteTransaction: (\n    transaction: SignableTransaction\n  ) => Promise<SuiTransactionResponse>;\n}\n\ninterface SuiWalletWindow {\n  suiWallet: SuiWallet;\n}\n\ndeclare const window: SuiWalletWindow;\n\n/**\n * @deprecated This wallet adapter has been replaced by the `WalletStandardAdapterProvider`.\n */\nexport class SuiWalletAdapter implements WalletAdapter {\n  connecting: boolean;\n  connected: boolean;\n\n  getAccounts(): Promise<string[]> {\n    return window.suiWallet.getAccounts();\n  }\n\n  signAndExecuteTransaction(\n    transaction: SignableTransaction\n  ): Promise<SuiTransactionResponse> {\n    return window.suiWallet.signAndExecuteTransaction(transaction);\n  }\n\n  name = \"Sui Wallet (legacy)\";\n\n  async connect(): Promise<void> {\n    this.connecting = true;\n    if (window.suiWallet) {\n      const wallet = window.suiWallet;\n      try {\n        let given = await wallet.requestPermissions();\n        const newLocal: readonly PermissionType[] = [\"viewAccount\"];\n        let perms = await wallet.hasPermissions(newLocal);\n        console.log(perms);\n        console.log(given);\n        this.connected = true;\n      } catch (err) {\n        console.error(err);\n      } finally {\n        this.connecting = false;\n      }\n    }\n  }\n\n  // Come back to this later\n  async disconnect(): Promise<void> {\n    if (this.connected == true) {\n      this.connected = false;\n    }\n    console.log(\"disconnected\");\n  }\n\n  constructor() {\n    this.connected = false;\n    this.connecting = false;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACgCO,IAAM,mBAAN,MAAgD;AAAA,EA2CrD,cAAc;AA7Bd,gBAAO;AA8BL,SAAK,YAAY;AACjB,SAAK,aAAa;AAAA,EACpB;AAAA,EA1CA,cAAiC;AAC/B,WAAO,OAAO,UAAU,YAAY;AAAA,EACtC;AAAA,EAEA,0BACE,aACiC;AACjC,WAAO,OAAO,UAAU,0BAA0B,WAAW;AAAA,EAC/D;AAAA,EAIA,MAAM,UAAyB;AAC7B,SAAK,aAAa;AAClB,QAAI,OAAO,WAAW;AACpB,YAAM,SAAS,OAAO;AACtB,UAAI;AACF,YAAI,QAAQ,MAAM,OAAO,mBAAmB;AAC5C,cAAM,WAAsC,CAAC,aAAa;AAC1D,YAAI,QAAQ,MAAM,OAAO,eAAe,QAAQ;AAChD,gBAAQ,IAAI,KAAK;AACjB,gBAAQ,IAAI,KAAK;AACjB,aAAK,YAAY;AAAA,MACnB,SAAS,KAAP;AACA,gBAAQ,MAAM,GAAG;AAAA,MACnB,UAAE;AACA,aAAK,aAAa;AAAA,MACpB;AAAA,IACF;AAAA,EACF;AAAA,EAGA,MAAM,aAA4B;AAChC,QAAI,KAAK,aAAa,MAAM;AAC1B,WAAK,YAAY;AAAA,IACnB;AACA,YAAQ,IAAI,cAAc;AAAA,EAC5B;AAMF;","names":[]}