import { SuiClient } from '@mysten/sui.js/client';
import { WalletAdapter, WalletAdapterEvents } from '@mysten/wallet-adapter-base';
import { ReadonlyWalletAccount } from '@mysten/wallet-standard';
export declare class UnsafeBurnerWalletAdapter implements WalletAdapter {
    #private;
    name: string;
    icon: string;
    connecting: boolean;
    connected: boolean;
    constructor(client?: SuiClient, faucetUrl?: string);
    getAccounts(): Promise<ReadonlyWalletAccount[]>;
    signMessage: WalletAdapter['signMessage'];
    signPersonalMessage: WalletAdapter['signPersonalMessage'];
    signTransactionBlock: WalletAdapter['signTransactionBlock'];
    signAndExecuteTransactionBlock: WalletAdapter['signAndExecuteTransactionBlock'];
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    on: <E extends keyof WalletAdapterEvents>(event: E, callback: WalletAdapterEvents[E]) => () => void;
}
